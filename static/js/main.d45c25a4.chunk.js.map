{"version":3,"sources":["serviceWorker.js","Store.js","App.jsx","pages/HomePage.jsx","pages/FavPage.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Store","createContext","initialState","episodes","favourites","reducer","state","action","type","payload","_objectSpread","concat","_toConsumableArray","StoreProivder","props","_useReducer","useReducer","_useReducer2","_slicedToArray","value","dispatch","React","createElement","Provider","children","App","useContext","Fragment","Suspense","fallback","className","Link","to","length","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","EpisodesList","lazy","__webpack_require__","bind","HomePage","_useContext","fetchDataAction","_ref","_asyncToGenerator","_callee","data","dataJSON","_context","fetch","json","_embedded","apply","arguments","toggleFavAction","episode","episodeInFavourites","includes","dispatchObj","filter","fav","id","useEffect","FavPage","ReactDOM","render","Router","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d45c25a4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\n\nexport const Store = createContext();\n\nconst initialState = {\n\tepisodes: [],\n\tfavourites: []\n};\n\nfunction reducer(state, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase \"FETCH_DATA\":\n\t\t\treturn { ...state, episodes: payload };\n\t\tcase \"ADD_FAV\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfavourites: [...state.favourites, payload]\n\t\t\t};\n\t\tcase \"REMOVE_FAV\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfavourites: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport function StoreProivder(props) {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\tconst value = { state, dispatch };\n\treturn <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React, { Fragment, Suspense, useContext } from \"react\";\nimport { Store } from \"./Store\";\nimport { Link } from \"@reach/router\";\n\nconst App = props => {\n\tconst { state } = useContext(Store);\n\treturn (\n\t\t<Fragment>\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<header className=\"header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Wilfred</h1>\n\t\t\t\t\t\t<p>Pick your favourite episodes</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t<Link to=\"/faves\">Favourite(s) {state.favourites.length}</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t</header>\n\t\t\t\t{props.children}\n\t\t\t</Suspense>\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","import React, { Fragment, Suspense, lazy, useEffect, useContext } from \"react\";\nimport { Store } from \"../Store\";\n\nconst EpisodesList = lazy(() => import(\"../components/EpisodesList\"));\n\nconst HomePage = () => {\n\tconst { state, dispatch } = useContext(Store);\n\n\tconst toggleFavAction = episode => {\n\t\tconst episodeInFavourites = state.favourites.includes(episode);\n\n\t\tlet dispatchObj = {\n\t\t\ttype: \"ADD_FAV\",\n\t\t\tpayload: episode\n\t\t};\n\n\t\tif (episodeInFavourites) {\n\t\t\tconst favouritesWithoutEpisode = state.favourites.filter(\n\t\t\t\tfav => fav.id !== episode.id\n\t\t\t);\n\n\t\t\tdispatchObj = {\n\t\t\t\ttype: \"REMOVE_FAV\",\n\t\t\t\tpayload: favouritesWithoutEpisode\n\t\t\t};\n\t\t}\n\n\t\treturn dispatch(dispatchObj);\n\t};\n\n\tconst fetchDataAction = async () => {\n\t\tconst data = await fetch(\n\t\t\t\"https://api.tvmaze.com/singlesearch/shows?q=wilfred&embed=episodes\"\n\t\t);\n\t\tconst dataJSON = await data.json();\n\n\t\treturn dispatch({\n\t\t\ttype: \"FETCH_DATA\",\n\t\t\tpayload: dataJSON._embedded.episodes\n\t\t});\n\t};\n\n\tconst { favourites, episodes } = state;\n\n\tconst props = {\n\t\tepisodes,\n\t\ttoggleFavAction,\n\t\tfavourites\n\t};\n\n\tuseEffect(() => {\n\t\tstate.episodes.length === 0 && fetchDataAction();\n\t});\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<section className=\"episode-layout\">\n\t\t\t\t\t<EpisodesList {...props} />\n\t\t\t\t</section>\n\t\t\t</Suspense>\n\t\t</Fragment>\n\t);\n};\n\nexport default HomePage;\n","import React, { lazy, useContext, Suspense } from \"react\";\nimport { Store } from \"../Store\";\n\nconst EpisodesList = lazy(() => import(\"../components/EpisodesList\"));\n\nconst FavPage = () => {\n\tconst { state, dispatch } = useContext(Store);\n\n\tconst toggleFavAction = episode => {\n\t\tconst episodeInFavourites = state.favourites.includes(episode);\n\n\t\tlet dispatchObj = {\n\t\t\ttype: \"ADD_FAV\",\n\t\t\tpayload: episode\n\t\t};\n\n\t\tif (episodeInFavourites) {\n\t\t\tconst favouritesWithoutEpisode = state.favourites.filter(\n\t\t\t\tfav => fav.id !== episode.id\n\t\t\t);\n\n\t\t\tdispatchObj = {\n\t\t\t\ttype: \"REMOVE_FAV\",\n\t\t\t\tpayload: favouritesWithoutEpisode\n\t\t\t};\n\t\t}\n\n\t\treturn dispatch(dispatchObj);\n\t};\n\n\tconst { favourites } = state;\n\n\tconst props = {\n\t\tepisodes: favourites,\n\t\ttoggleFavAction,\n\t\tfavourites\n\t};\n\treturn (\n\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t<div className=\"episode-layout\">\n\t\t\t\t<EpisodesList {...props} />\n\t\t\t</div>\n\t\t</Suspense>\n\t);\n};\n\nexport default FavPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"@reach/router\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StoreProivder } from \"./Store\";\n\nimport App from \"./App\";\nimport HomePage from \"./pages/HomePage\";\nimport FavPage from \"./pages/FavPage\";\n\nReactDOM.render(\n\t<StoreProivder>\n\t\t<Router>\n\t\t\t<App path=\"/\">\n\t\t\t\t<HomePage path=\"/\" />\n\t\t\t\t<FavPage path=\"/faves\" />\n\t\t\t</App>\n\t\t</Router>\n\t</StoreProivder>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}